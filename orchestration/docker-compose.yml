networks:
  app-network:
    driver: bridge

services:
  web:
    image: public.ecr.aws/l4a3r3t7/cde/monolith:${AGENT}
    pull_policy: always
    container_name: web
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
    
    depends_on:
      - redis
    networks:
      app-network:
        aliases:
          - backend
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=web,container=web,agent=${AGENT}"

  celery-worker:
    image: public.ecr.aws/l4a3r3t7/cde/monolith:${AGENT}
    pull_policy: always
    container_name: celery-worker
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
    command: celery -A app.celery_app.celery_app worker --loglevel=info
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=celery-worker,container=celery-worker,agent=${AGENT}"

  celery-beat:
    image: public.ecr.aws/l4a3r3t7/cde/monolith:${AGENT}
    pull_policy: always
    container_name: celery-beat
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
    command: celery -A app.celery_app.celery_app beat --loglevel=info
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=celery-beat,container=celery-beat,agent=${AGENT}"
      
  frontend:
    image: public.ecr.aws/l4a3r3t7/cde/frontend:${AGENT}
    pull_policy: always
    container_name: frontend
    env_file:
      - .env
    networks:
      - app-network
    ports:
      - "3500:3000"
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=frontend,container=frontend,agent=${AGENT}"

  redis:
    image: redis:alpine
    pull_policy: always
    container_name: redis
    networks:
      - app-network
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=redis,container=redis,agent=${AGENT}"

  nginx:
    image: public.ecr.aws/l4a3r3t7/cde/proxy:${AGENT}
    pull_policy: always
    container_name: nginx
    ports:
      - "${PORT}:443"
    env_file:
      - .env
    volumes:
      - ${CERTS_FOLDER}:/.certs/
    platform: linux/amd64
    depends_on:
      - web
    networks:
      - app-network
    labels:
      - "logging.promtail=true"
    logging:
      driver: loki
      options:
        max-size: "100m"
        max-file: "3"
        loki-url: "http://34.223.156.189:3100/loki/api/v1/push"
        loki-external-labels: "job=nginx,container=nginx,agent=${AGENT}"