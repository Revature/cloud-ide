name: Docker Build Frontend

on: 
  push:
    paths:
        - frontend/**

env:
  AWS_REGION: us-east-1
  ECR_ALIAS: l4a3r3t7
  ECR_REPOSITORY: cde/frontend

jobs:
    Build:
        runs-on: ubuntu-latest
        environment: |-
          ${{
             github.ref_name == 'main' && 'PRODUCTION'
          || github.ref_name == 'dev' && 'DEVELOPMENT'
          || github.ref_name == 'demo' && 'DEMO'
          || startsWith(github.ref_name, 'feat') && 'TEST'
          }}

        env:
          TAG: |-
            ${{ 
               github.ref_name == 'main' && 'prod'
            || github.ref_name == 'dev' && 'dev'
            || github.ref_name == 'demo' && 'demo'
            || startsWith(github.ref_name, 'feat') && 'test'
            || 'NONE'
            }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: Create .env file
              if: env.TAG != 'NONE'
              id: create-env
              run: |
                ls -al ./frontend
                echo "${{ vars.FE_BUILD_ENV }}" >> ./frontend/.env
                ls -al ./frontend
                cat ./frontend/.env

            - name: Build Docker Image
              id: build-image
              run: docker build --file ./frontend/Dockerfile --tag ${{ env.ECR_REPOSITORY }}:${{env.TAG}} --tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ./frontend

            - name: Configure AWS credentials
              id: aws-credentials
              if: env.TAG != 'NONE'
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}

            - name: Amazon ECR Login
              if: env.TAG != 'NONE'
              id: login-ecr-public
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: public

            - name: Push image to Amazon ECR
              if: env.TAG != 'NONE'
              id: push-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
              run: |
                docker tag ${{ env.ECR_REPOSITORY }}:${{env.TAG}} $ECR_REGISTRY/$ECR_ALIAS/$ECR_REPOSITORY:${{env.TAG}}
                docker push $ECR_REGISTRY/$ECR_ALIAS/$ECR_REPOSITORY:${{env.TAG}}

                docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} $ECR_REGISTRY/$ECR_ALIAS/$ECR_REPOSITORY:${{ github.sha }}
                docker push $ECR_REGISTRY/$ECR_ALIAS/$ECR_REPOSITORY:${{ github.sha }}