networks:
  app-network:
    driver: bridge

services:
  web:
    build: ./backend
    container_name: web
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - redis
    networks:
      app-network:
        aliases:
          - backend

  celery-worker:
    build: ./backend
    container_name: celery-worker
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
    command: celery -A app.celery_app.celery_app worker --loglevel=info
    depends_on:
      - redis
    networks:
      - app-network

  celery-beat:
    build: ./backend
    container_name: celery-beat
    env_file:
      - .env
    volumes:
      - ${AWS_FOLDER}:/root/.aws:ro
    command: celery -A app.celery_app.celery_app beat --loglevel=info
    depends_on:
      - redis
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - app-network
    ports:
      - "3500:3000"

  redis:
    image: redis:alpine
    pull_policy: always
    container_name: redis
    networks:
      - app-network

  nginx:
    build: ./proxy
    container_name: nginx
    ports:
      - "${PORT}:80"
      - "2222:2222"
    env_file:
      - .env
    volumes:
      - ${CERTS_FOLDER}:/.certs/
    platform: linux/amd64
    depends_on:
      - web
    networks:
      - app-network